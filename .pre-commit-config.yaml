# Pre-commit configuration for torch-inference framework
# Runs automated checks before each commit

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile, black, --line-length=88]

  # Linting and code quality
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML, types-Pillow]
        args: [--ignore-missing-imports, --install-types, --non-interactive]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, framework, -f, json, -o, bandit-report.json]
        pass_filenames: false

  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Basic file checks
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-xml
      
      # Python-specific checks
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]
      
      # File cleanup
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: mixed-line-ending
        args: [--fix=lf]
      
      # Requirements files
      - id: requirements-txt-fixer

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google, --add-ignore=D100,D104,D105,D107]
        exclude: ^(tests/|examples/)

  # Jupyter notebooks (if any)
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
      - id: nbqa-isort
      - id: nbqa-ruff

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown]
        exclude: ^(.*\.md|CHANGELOG\.md)$

  # Spell checking (optional, can be disabled)
  - repo: https://github.com/crate-ci/typos
    rev: v1.16.26
    hooks:
      - id: typos
        exclude: ^(tests/fixtures/|\.git/)
        args: [--format, brief]

  # Docker
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Local hooks
  - repo: local
    hooks:
      # Custom pytest hook for fast tests
      - id: pytest-fast
        name: Run fast tests
        entry: uv run pytest
        args: [-m, "not slow and not gpu", --tb=short, -q]
        language: system
        types: [python]
        require_serial: true
        pass_filenames: false
        stages: [pre-push]

      # Custom safety check
      - id: safety-check
        name: Safety dependency scan
        entry: uv run safety
        args: [check, --short-report]
        language: system
        pass_filenames: false
        stages: [pre-push]

      # Custom model validation
      - id: validate-test-models
        name: Validate test models
        entry: uv run python
        args: [-c, "from tests.models.model_loader import TestModelLoader; TestModelLoader().validate_models()"]
        language: system
        pass_filenames: false
        stages: [pre-push]
        always_run: true

# Configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: 3.0.0

# CI configuration
ci:
  autoupdate_schedule: monthly
  autofix_commit_msg: 'style: auto-fix pre-commit hooks'
  autoupdate_commit_msg: 'chore: update pre-commit hooks'
  skip: [pytest-fast, safety-check, validate-test-models]

torch-inference/
├── src/                           # Main source code
│   ├── api/                       # FastAPI application layer
│   │   ├── __init__.py
│   │   ├── app.py                 # FastAPI app creation and configuration
│   │   ├── dependencies.py        # API dependency injection
│   │   ├── middleware.py          # Custom middleware
│   │   ├── lifespan.py           # Application lifespan management
│   │   └── routers/              # API route handlers
│   │       ├── __init__.py
│   │       ├── core.py           # Core endpoints (/, /health, /stats)
│   │       ├── inference.py      # Inference endpoints
│   │       ├── models.py         # Model management endpoints
│   │       ├── audio.py          # TTS/STT endpoints
│   │       ├── gpu.py            # GPU detection endpoints
│   │       ├── autoscaler.py     # Autoscaling endpoints
│   │       ├── server.py         # Server management endpoints
│   │       └── logs.py           # Logging endpoints
│   │
│   ├── services/                  # Business logic layer
│   │   ├── __init__.py
│   │   ├── inference_service.py   # Core inference operations
│   │   ├── model_service.py       # Model management operations
│   │   ├── audio_service.py       # Audio processing operations
│   │   ├── gpu_service.py         # GPU management operations
│   │   ├── autoscaler_service.py  # Autoscaling operations
│   │   └── download_service.py    # Model download operations
│   │
│   ├── models/                    # Pydantic models and schemas
│   │   ├── __init__.py
│   │   ├── api/                   # API request/response models
│   │   │   ├── inference.py
│   │   │   ├── audio.py
│   │   │   ├── models.py
│   │   │   └── common.py
│   │   └── domain/                # Domain models
│   │       ├── model.py
│   │       ├── inference.py
│   │       └── audio.py
│   │
│   ├── core/                      # Core application logic
│   │   ├── __init__.py
│   │   ├── config.py              # Application configuration
│   │   ├── logging.py             # Logging configuration
│   │   ├── exceptions.py          # Custom exceptions
│   │   ├── security.py            # Security utilities
│   │   └── utils.py               # Common utilities
│   │
│   └── __init__.py
│
├── framework/                     # Keep existing structure but organize better
│   ├── core/                     # Core framework components
│   ├── models/                   # Model implementations
│   ├── processors/               # Data processors
│   ├── optimizers/               # Optimization techniques
│   ├── adapters/                 # External integrations
│   ├── autoscaling/              # Autoscaling components
│   ├── security/                 # Security components
│   ├── utils/                    # Framework utilities
│   └── __init__.py
│
├── tests/                        # Reorganized tests
│   ├── unit/                     # Unit tests
│   │   ├── api/                  # API layer tests
│   │   ├── services/             # Service layer tests
│   │   ├── framework/            # Framework tests
│   │   └── core/                 # Core logic tests
│   ├── integration/              # Integration tests
│   │   ├── api/                  # API integration tests
│   │   ├── services/             # Service integration tests
│   │   └── end_to_end/          # Full workflow tests
│   └── fixtures/                 # Test data and fixtures
│
├── scripts/                      # Utility scripts
│   ├── setup.py                  # Environment setup
│   ├── benchmark.py              # Performance benchmarking
│   ├── optimize.py               # Model optimization
│   └── deploy.py                 # Deployment utilities
│
├── config/                       # Configuration files
│   ├── default.yaml              # Default configuration
│   ├── development.yaml          # Development settings
│   ├── production.yaml           # Production settings
│   └── testing.yaml              # Testing configuration
│
├── docker/                       # Docker configuration
│   ├── Dockerfile                # Main Dockerfile
│   ├── Dockerfile.dev            # Development Dockerfile
│   ├── docker-compose.yml        # Local development
│   └── docker-compose.prod.yml   # Production deployment
│
├── docs/                         # Keep existing docs structure
├── examples/                     # Keep existing examples
├── tools/                        # Keep existing tools
├── main.py                       # Simplified entry point
├── pyproject.toml               # Keep existing
└── README.md                    # Keep existing
